apiVersion: v1
kind: Service
metadata:
  name: dolt
  labels:
    app: dolt
spec:
  ports:
  - port: 80
    name: http
  clusterIP: None
  selector:
    app: dolt
---
apiVersion: v1
kind: Secret
metadata:
  name: dolt-credentials
type: Opaque
data:
  username: TlpjV29lMVppQQ== # NZcWoe1ZiA (UPDATE)
  password: dWx0eFFwVzIxNA== # ultxQpW214 (UPDATE)
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: dolt
spec:
  selector:
    matchLabels:
      app: dolt
  serviceName: dolt
  replicas: 1
  template:
    metadata:
      labels:
        app: dolt
    spec:
      containers:
      - name: dolt
        image: ghcr.io/ist-ltd/dolt:0.0.1-rc1
        env:
        - name: GIT_REPOS
          value: test # UPDATE
        - name: GIT_USERNAME
          valueFrom:
            secretKeyRef:
              name: dolt-credentials
              key: username
              optional: false
        - name: GIT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: dolt-credentials
              key: password
              optional: false
        ports:
        - containerPort: 80
          name: http
        volumeMounts:
        - name: dolt-repositories
          mountPath: /srv/git
  volumeClaimTemplates:
  - metadata:
      name: dolt-repositories
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 5Gi
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: dolt
  annotations:
    # AWS-ONLY:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS": 443}]'
spec:
  ingressClassName: alb # AWS-ONLY
  rules:
    - host: host.example # UPDATE
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: dolt
                port:
                  number: 80